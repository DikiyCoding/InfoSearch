Программирование – Искусство создания компьютерных программ / Хабр Все сервисы Хабра 935,32 Рейтинг Программирование Искусство создания компьютерных программ вчера в 16:17 , , Перевод В моих предыдущих материалах я () об анти-паттернах Angular и о рекомендованных приёмах работы с . После того, как я полгода проработал с NGRX и как следует разобрался с этой библиотекой, полагаю, что пришло время рассказать о некоторых приёмах работы, которые я (часто это относится ко всему сообществу тех, кто пользуется NGRX) нахожу вредными или слишком сложными. +14 17 909 8 апреля 2021 в 12:43 8 апреля 2021 в 12:19 8 апреля 2021 в 11:16 27 марта 2021 в 10:18 18 марта 2021 в 15:43 16 марта 2021 в 15:20 9 марта 2021 в 07:30 8 марта 2021 в 18:55 2 марта 2021 в 21:40 24 февраля 2021 в 11:11 Показать ещё вчера в 16:06 , , , , Перевод Создавать, запускать, просматривать, перемещать контейнеры и образы с помощью интерфейса командной строки Docker (Docker CLI) проще простого, но задумывались ли вы когда-нибудь, как на самом деле работают внутренние компоненты, обеспечивающие работу интерфейса Docker? За этим простым интерфейсом скрывается множество продвинутых технологий, и специально к старту нового потока в этой статье мы рассмотрим одну из них — объединённую файловую систему, используемую во всех слоях контейнеров и образов. Маститым знатокам контейнеризации и оркестрации данный материал навряд ли откроет что-то новое, зато будет полезен тем, кто делает первые шаги в DevOps. +10 61 2,4k вчера в 14:16 , , , , Перевод В последнее время много копий сломано вокруг технических собеседований. Очевидно, что инвертирование двоичного дерева на доске практически никак не связано с практическими навыками реального программиста. Примитивный по-прежнему остаётся самым эффективным тестом. Как следствие, выросло внимание к опенсорсным проектам, но оказалось, что это , потому что у большинства профессионалов нет на них времени. У нас в компании самое эффективное собеседование по программированию на сегодняшний день — это обычно какое-то домашнее задание на несколько дней, в котором кандидата просят исправить баг или реализовать небольшую функцию. Это не очень хорошо, потому что занимает много времени, и человек может получить внешнюю помощь (или погуглить, если функция достаточно распространённая). С другой стороны, некоторые крупные компании вместо этого удвоили количество собеседований с доской (и алгоритмами), подвергая будущих инженеров с различным уровнем инвазивного наблюдения. Все эти методы интервью не сравнятся с очень простой метрикой: совместная игра в Factorio. Прохождение всего цикла Factorio — практически идеальный показатель, насколько хорошо человек решает общие технические проблемы. Можно даже настроить прохождение игры на основе будущей должности, чтобы лучше понять, как кандидат справится со своей ролью. +52 58 14,4k вчера в 12:54 , , Перевод Время от времени новички в Go натыкаются на любопытное свойство языка, связанное с размером стека, доступным для горутины. Обычно это происходит из-за того, что программист непреднамеренно создает бесконечную рекурсию. Чтобы проиллюстрировать это, рассмотрим следующий (слегка надуманный) пример. +1 15 2,1k Минуточку внимания вчера в 12:00 , , Перевод В основу статьи легли мои собственные выработанные нелегким путем знания о принципах работы и правильном использовании целых чисел в C/C++. Помимо самих правил, я решил привести список распространенных заблуждений и сделать небольшое сравнение системы целочисленных типов в нескольких передовых языках. Все изложение строилось вокруг баланса между краткостью и полноценностью, чтобы не усложнять восприятие и при этом отчетливо передать важные детали. +37 78 5,4k вчера в 08:15 , , Перевод Я не думаю, что на самом деле существует стопроцентно правильный или неправильный способ его использования: локальные сборки и настройки для разработчиков, как правило, имеют разные порой необычные требования, и поэтому стандарт не всегда соответствует реальности. Пожалуйста, отнеситесь к статье с соответствующим скептицизмом. В любом случае, вот краткое изложение некоторых из кардинальных "грехов", которые я совершил при использовании docker-compose. +6 71 4,7k 8 апреля 2021 в 20:39 , , , Всем привет. Данная статья относится к тем специалистам, которые уже нашли свою нишу в области IT и работают здесь уже несколько лет. Данная статья относится к тем, кто пришел в IT не из профильного университета. Возможно, что Вы, как и я, пришли в IT закончив экономическое направление в ВУЗе. Данный тип людей имеет одну большую проблему: в голове есть только те знания, которые пришли с решением практических задач на работе. Не хватает системного подхода в образовании, а значит данные специалисты имеют ряд "белых пятен" в образовании. Например, незнание простых алгоритмов, базовых структур данных. Примеры в данной статье привожу для программистов, но смысл примеров подходит и для других направлений IT. –8 21 5,9k AdBlock похитил этот баннер, но баннеры не зубы — отрастут 8 апреля 2021 в 18:46 , , , Перевод Привет, Хабр! Вчера вышло обновление . В него вошла интеграция с , которая позволяет использовать любую IDE на платформе IntelliJ для код-ревью: назначать ревью и управлять ими, просматривать и добавлять комментарии, принимать изменения. Как это работает, мы подробно расскажем в этом посте. +7 11 2,4k 8 апреля 2021 в 17:20 , , , , Всем привет! Сегодня уже по традиции рассказываем про наши 3 бесплатных крутых тренинга, которые пройдут в этом месяце по теме создания бизнес-приложений. Все они на английском языке, но с субтитрами на русском. Под катом читайте подробности про каждый из вебинаров и регистрируйтесь. Ждем вас! 0 5 583 8 апреля 2021 в 17:14 , У меня с детства была мечта написать игру для любимой приставки денди, шло время, мечта то появлялась то затихала снова. Она меня направляла в сторону магии программирование, и вот прошло больше 20-ти лет я программист, и снова в который раз пытаюсь постигнуть магию той самой денди что так будоражило моё воображение в тяжелом но счастливом детстве. Сегодня Я расскажу вам как постиг секреты этой магии, наконец то смог вывести спрайты на экран и научился рисовать фон, и надеюсь это будет не последняя мая статья на Хабре. +12 29 2,8k 8 апреля 2021 в 16:45 , , , Привет, Хабр! В JetBrains стартовал новый релизный год: все наши десктопные продукты обновились или обновятся в самое ближайшее время. Сегодня мы хотим поговорить о CLion 2021.1 — новейшей версии нашей кроссплатформенной IDE для разработки на C и C++. +9 9 1,6k 8 апреля 2021 в 14:26 , , , На днях компания Google важный шаг, объявив о включении языка программирования Rust в число языков, которые допускаются для разработки платформы Android. Да, еще в 2019 году компилятор Rust включили в дерево исходных текстов Android, но это была экспериментальная поддержка. Сейчас в Android планируется добавить первые компоненты на Rust, это будут новые реализации механизма межпроцессного взаимодействия Binder и Bluetooth-стека. Все это хорошо, но зачем весь этот сыр-бор с включением Rust? +51 20 8,4k 8 апреля 2021 в 13:52 , , , , Перевод PHP пытается восполнить недостаток возможностей в своей кодовой базе, и ’ы — одно из значимых нововведений. Они появились в PHP 8.1 в конце 2020 и привнесли в язык своего рода асинхронное программирование. Файберы представляют собой легковесные потоки исполнения (известные как сопрограммы, или корутины (coroutine)). Они исполняются параллельно, но обрабатываются исключительно самой runtime-средой, а передаются напрямую в процессор. Разные реализации сопрограмм есть , но принцип один и тот же: позволить компьютеру одновременно выполнять две и больше задач и ждать, пока они все не завершатся. PHP-реализация файберов — это не настоящие асинхронные вычисления, как можно подумать. Даже после появления новинки ядро языка осталось синхронным. Применение файберов можно сравнить с пересаживанием из одного автомобиля в другой. +4 23 3,3k Средняя зарплата в IT 120 000 ₽/мес. Средняя зарплата по всем IT-специализациям на основании 5 782 анкет, за 1-ое пол. 2021 года 8 апреля 2021 в 11:00 , , , Перевод Большинство новичков в программировании рано или поздно сталкивается с такой чарующей фразой: «Программирование — это просто, ему может научиться любой». Эта фраза сопровождается угрожающим сообщением о том, что людям, занимающимся гейткипингом, надо прекратить. Этой статьёй я хочу сказать, что это неправда. Программирование — это сложно, оно не для каждого, и хотя сейчас им может заняться каждый, большинству определённо не стоит писать код. Программирование легкодоступно Когда глупые люди говорят, что программировать просто, что им может заниматься каждый, они на самом деле имеют ввиду доступность сферы программирования. Если у вас есть простейшее средство доступа к Интернету, то достаточно легко получить доступ к ресурсам для изучения. Ни одна из наук не доступна настолько, как компьютерная наука, и большинство работ по ней выложено в открытый доступ — компьютерная наука процветает в Интернете, и хотя отдельные её ветви закрыты, большинство контента доступно свободно и процветает благодаря этой доступности. Вы можете скачивать компиляторы, редакторы, IDE, даже получить доступ к документации, обсуждать с другими людьми свои проблемы, и так далее. Это огромное сообщество, уровень гостеприимности и открытости которого несравним с любой другой наукой в истории человечества. +71 123 33,5k 8 апреля 2021 в 10:05 , , , , В этой статье я расскажу о MVP курса по обучению программированию на Javascript, который возник благодаря удаленке. +49 74 8,8k 8 апреля 2021 в 09:44 , , , Пытаясь усовершенствовать свою работу, чуть больше семи лет назад я пришел к раскладке Дворака и пользуюсь ей до сих пор. Хотя мне пришлось пойти на компромисс и отказаться от Дворака для программистов в пользу “классического”, в целом мне очень нравится, как спроектирована эта раскладка. Однако спроси меня сейчас, стоило ли оно того, я не порекомендую переходить. Под катом о том, как я переучивался и с какими трудностями эксплуатации столкнулся. Напоследок несколько выводов по итогам 7 лет эксплуатации. +26 23 7,9k 8 апреля 2021 в 09:00 , , , , С 2016 года вышло немало статей, разборов, мнений о книге Google «Site Reliability Engineering». Книги – это мощь, поэтому мы не будем однобокими – поищем хорошее и не очень. А на проблемы внесём конструктивное предложение и расскажем об одном из возможных вариантов во вселенной: практическом офлайн-интенсиве «SRE» от Слёрм. –3 8 1,6k 7 апреля 2021 в 18:51 , , , Перевод Полнотекстовый поиск — неотъемлемая часть нашей жизни. Разыскать нужные материалы в сервисе облачного хранения документов Scribd, найти фильм в Netflix, купить туалетную бумагу на Amazon или отыскать с помощью сервисов Google интересующую информацию в Интернете — наверняка вы сегодня уже не раз отправляли похожие запросы на поиск нужной информации в невообразимых объёмах неструктурированных данных. И что удивительнее всего — несмотря на то что вы осуществляли поиск среди миллионов (или даже миллиардов) записей, вы получали ответ за считанные миллисекунды. Специально к старту нового потока курса , в данной статье мы рассмотрим основные компоненты полнотекстовой поисковой машины и попытаемся создать систему, которая сможет за миллисекунды находить информацию в миллионах документов и ранжировать результаты по релевантности, причём всю систему можно воплотить всего в 150 строках кода на Python! +5 92 5,3k 7 апреля 2021 в 16:59 , , , Перевод Куча (heap) — это не что иное, как двоичное дерево с некоторыми дополнительными правилами, которым оно должно следовать: во-первых, оно всегда должно иметь структуру кучи, где все уровни двоичного дерева заполняются слева направо, и, во-вторых, оно должно быть упорядочено в виде max-кучи или min-кучи. В качестве примера я буду использовать min-кучу. Алгоритм пирамидальной сортировки — это метод сортировки, который полагается на такие структуры данных как двоичные кучи. Поскольку мы знаем, что кучи всегда должны соответствовать определенным требованиям, мы можем использовать это для поиска элемента с наименьшим значением, последовательно сортируя элементы, выбирая корневой узел кучи и добавляя его в конец массива. +6 39 2k 7 апреля 2021 в 16:19 , , , С постоянной периодичностью появляется информация о выходе новой версии того или иного языка программирования. И с каждой новой версией расширяются его возможности, добавляются новые синтаксические конструкции или иные улучшения. И это очень сильно напоминает развитие технологий, как и в любой другой области техники. Когда с очередным этапом совершенствуются создаваемые творения. Быстрее, выше, сильнее … и одновременно значительно сложнее. Об этой проблеме меня заставила задуматься первоапрельская статья Понятно, что дата публикации статьи говорит сама за себя. Тем не менее, новые стандарты С++, постоянно выходящие спецификации Java или новый синтаксис у PHP 8, невольно заставляют задуматься, а в нужную ли сторону идет развитие языков программирования? Ведь большинство нововведений добавляют сложность в основной рабочий инструмент и решая одни проблемы, неявно добавляя множество других. А что должно быть в конце прогресса у развития такой дисциплины как программирование? Или хотя бы у одного конкретного языка? Ради достижения какой конечной «идеальной» цели разрабатываются новые стандарты языков программирования? +2 17 4,4k ← сюда 1 Баннер исчез, но на прощание оставил коллекцию по работе с продуктами от Microsoft Вклад авторов Читают сейчас 17,5k 5,3k 11,2k 14,4k 2,5k 1124k Мегапост Пока никто не указал причину минусов Причины минусов Самое читаемое +49 17,5k 53 +111 71k 65 +52 14,4k 58 +20 14,2k 2 Мегапост +218 104k 83 +111 71k 65 +45 66,6k 144 +62 36,6k 58 Мегапост +231 252k 446 +56 213k 112 +592 209k 505 +62 174k 111 Подборка Минуточку внимания Ваш аккаунт Разделы Информация Услуги © 2006 – 2021 «» Настройка языка Интерфейс Русский English Язык публикаций Русский Английский Сохранить настройки