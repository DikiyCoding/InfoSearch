Программирование микроконтроллеров – Учимся программировать микроконтроллеры / Хабр Все сервисы Хабра 208,60 Рейтинг Программирование микроконтроллеров Учимся программировать микроконтроллеры вчера в 21:49 Речь пойдёт подключении дисплея AT070TN94 с параллельным интерфейсом к контроллеру STM32H743, начиная от выбора электронных компонентов, заканчивая настройкой блока LTDC. И хотя в сети достаточно много информации по данной теме, при создании своего устройства у меня периодически возникали те или иные вопросы, ответов на которых найти не удавалось. Пишу в первую очередь для новичков, а профи приглашаю почитать ради советов и аргументированной критики (первая статья как-никак). Приступим. +17 31 2,5k 21 февраля 2021 в 18:30 8 февраля 2021 в 11:51 16 января 2021 в 20:17 28 сентября 2020 в 14:30 17 сентября 2020 в 07:35 23 августа 2020 в 14:45 28 октября 2019 в 17:55 25 октября 2019 в 18:10 18 августа 2019 в 08:27 вчера в 19:11 Показать ещё 7 апреля 2021 в 10:19 , , История непримиримой борьбы за повышение безопасности написанного на языке С++ микропрограммного обеспечения, против динамического выделения памяти, за пробуждение исследовательского духа в разработке, против избыточной сложности кода, за здоровую критику на ревью и здоровую самокритику, за оптимизацию потребления всех видов памяти, за образцовое содержание документации и против недооценки собственных сил и ресурсов небольших устройств на базе STM32. +34 56 6,4k 6 апреля 2021 в 12:47 , , , Tutorial И снова здравствуйте. Эта статья является продолжением. Если в прошлый раз мы постигали основы микроконтроллера JN5169, его периферию, очереди и таймеры, то сегодня будем постигать основную фишку этого микроконтроллера - работу в ZigBee сетях. Статья является вдумчивым перевариванием документации от NXP, а также примеров кода, которые поставляются вместе с NXP ZigBee SDK. Как и в прошлый раз я буду строить приложение с нуля, понемногу добавляя в него функционал (а заодно и разбираясь в этом коде). Цель - построить работоспособное приложение с минимальным количеством кода, которое реализует одноклавишный умный выключатель с управлением по ZigBee. +22 35 2,8k 6 апреля 2021 в 10:31 , , , , Tutorial В этом материале мы покажем, что Интернет вещей — это не так уж и сложно. Для этого за 60 минут соберем и оживим простейшую Wi-Fi розетку с управлением через Интернет. +5 62 8,6k Минуточку внимания 6 апреля 2021 в 10:11 , , , , В данной статье я опишу решение поставленной мне задачи по снижению шума и повышению плавности движения механизма, движимого шаговым двигателем (далее просто ШД) при ускорении. Данная задача довольна специфична. Описанное мною решение будет полезно при разработке модулей управления ШД . Далее опишу алгоритм управления ШД с помощью микроконтроллера. Перед тем, как начать описывать задачу, я изложу основы управления ШД, которые будут включать необходимый минимум для рассмотрения, описанных в статье способов управления. Рассмотрим необходимый минимум основ управления ШД , необходимый для понимания принципа управления, описанного ниже. А именно: • Способы подключения обмоток, необходимые для осуществления данного режима работы. Полношаговый режим управления при задействовании на один шаг двух фаз. • Изменение полярности обмотки с помощью Н-моста. • Принципиальная электрическая схема, включающая в себя 4 драйвера полумоста и 2 Н-моста. • Способ модуляции синусоидального сигнала с помощью широтно-импульсной модуляции (далее просто ШИМ). • Способы подключения обмоток. +20 82 9,7k 5 апреля 2021 в 19:25 , , , , Мы в проекте некоторое время назад запустили . Примером было приложение moveblocks — анимация с четырьмя синими квадратами, которые перемещаются по экрану. Нам захотелось большего, например, добавить интерактивность, ведь на плате доступен тачскрин. Мы выбрали приложение animatedtiles просто потому, что оно и на компьютере круто смотрится. По нажатию виртуальных кнопок множество иконок плавно перемещаются по экрану, собираясь в различные фигуры. Причем выглядит это вполне как 3d анимация и у нас даже были сомнения, справится ли микроконтроллер с подобной задачей. +15 33 2,8k 5 апреля 2021 в 13:33 , , , , Практически все интегрированные среды разработки значительно упрощают жизнь программистам. А в случае разработки прошивки для микроконтроллеров, еще и освобождают его от нудной настройки параметров работы периферии, оставляя больше времени на разработки и отладку основной функциональности. Например, при работе в STM32 CubeIDE, вся настройка параметров работы периферии сводится к вводу правильной частоты кварца и условного «кликанья мышкой», вместо того, чтобы программировать параметры работы железа вручную. В продолжение серии статей про различные полезности для STM32 (, и ), хочу рассказать, как в некоторых случаях, такое упрощение работы может стать источником совершенно не очевидных ошибок. +7 17 2,8k AdBlock похитил этот баннер, но баннеры не зубы — отрастут 2 апреля 2021 в 18:32 , , Перевод , или IoT, уже стал реальностью. Вы, вероятно, используете одно (или более) устройство IoT прямо сейчас, или, по крайней мере, воспользовались преимуществами его применения. И этот рынок имеет тенденцию только расти. Вообще говоря, интернет вещей - это сеть физических объектов, которая позволяет этим объектам создавать данные и обмениваться ими. Согласно , в 2021 году в мире насчитывалось 25 миллиардов устройств IoT, а к 2025 году эта цифра достигнет около 64 миллиардов (а ). От до , каждый сектор использует IoT, для помощи в своей сфере деятельности. Не так давно те данные, которые у нас были, были созданы вручную человеком. Если они вообще создавались. Но, как бы мы ни старались, у всех людей есть ограничения на то, сколько данных мы можем получить. С созданием Интернета и развитием технологий можно собрать большое количество данных, чтобы помочь любому бизнесу расти. Независимо от того, используете ли вы устройство, , или же и нуждается в медицинской поддержке, IoT будет все больше и больше частью нашей жизни. –6 38 4,4k 30 марта 2021 в 13:55 , , Tutorial Решил как-то отец собрать для дачи некое устройство, в котором, по его заверению, можно будет варить сыр. Устройство сие вид имело могучий и представляло из себя железный короб, подозрительно напоминающий старую стиральную машинку. Внутрь короба (все также добротно!) были вмонтированы три тэна по 1700 Ватт каждый. В общем сыра должно было хватить на небольшой посёлок. Изделие (внешне выглядящее как что-то из безумного макса), должно быть весьма технологичным и поддерживать заданную температуру в максимально узких пределах. Для этого рядом появилась ещё одна коробка с симисторами, к которым подключались ТЭНы, схема, выдающая высокий уровень при переходе синусоиды через ноль, а у меня появилось задание каким-то образом сделать так, что-бы все это выполняло изначальную задачу. Итак нам нужно выходить на заданную величину и поддерживать её, с этим должен справляться алгоритм ПИД регулятора, глубоко вдаваться в его работу не буду, скажу лишь что он получает на вход текущую ошибку, а на выходе выдает какое-то число в заданных пределах. У меня таким числом будет необходимая мощность выдаваемая на ТЭН. Для начала разберемся с мощностью. +10 69 15,2k 30 марта 2021 в 12:16 , , , , Однажды на новогодних каникулах, лениво листая интернет, бракоделы в нашем* R&D офисе заметили видео с испытаний прототипа роботакси. Комментатор отзывался восторженным тоном – революция, как-никак. Но тренированное ухо расслышало в шуме с испытательной площадки еще кое-что. Контроллер скорости (штука для управления тягой винтов) сыграл мелодию при старте, как это любят делать пилоты дронов, которые часто используют полётный контроллер Betaflight. Неужели там бета-флайт? Ну, или какая-то из ее немногих разновидностей. Перед глазами побежали флешбеки, где-то из глубин подсознания всплыла забытая уже информация о прошивках для Тойоты на миллионы тысяч строк Си и 2 тысячи глобальных переменных (). После просмотра исходного кода Betaflight на гитхабе стало еще страшнее, и чем дальше, тем . Это – управляющая программа для тяжелого устройства с острыми винтами, которое летает высоко, быстро. Становится страшно: игрушки это одно, но я бы не хотел летать, на таком такси. Но ведь можно иначе? Можно, решили мы! И решили это доказать. На Avito был куплен акробатический FPV-“квадрик” на базе STM32F405, для отладки – Discovery-платы для этого же контроллера, а дальше все как в тумане.. +88 108 11,4k 29 марта 2021 в 16:27 , , , Года три назад я купил на Ali цветной e- paper дисплей «Waveshare 4.2 inch e-paper module», руководствуясь в основном желанием попробовать новую технологию своими руками.Дисплей может отображать 3 цвета (белый, черный, красный) с разрешением 400 на 300 точек. Интерфейс подключения – SPI. Всего требуется подключить пять информационных сигналов: DIN, CLK, CS, BUSY, RESET.Плюс естественно GND и питание. Принцип действия такого дисплея: в жидкости находятся сферы, окрашенные в три цвета. Они могут поворачиваться под действием электрического поля и оставаться в таком состоянии неопределенно долгое время. Основное достоинство такого дисплея в том, что энергия для его работы требуется только на этапе вывода новой информации. В статике энергия не требуется совсем. Поэтому такой дисплей идеален в системах с автономным питанием с нечастым обновлением данных. Поставленная задача была такой: сделать автономный беспроводной блок с e-paper дисплеем, на котором можно будет отображать информацию о текущей погоде и прогноз на ближайшее время. Размещаться такой блок предполагалось в прихожей, чтобы погодную информацию можно было посмотреть в момент выхода и решить, например, надо брать зонт с собой. Конечно я знаю, что можно ровно то же самое посмотреть на экране смартфона :)) Дисплей был куплен, присоединен к ESP8266 и опробован в работе с помощью программы Loader.ino, которую предлагает Waveshare. При запуске esp8266 создает сайт, зайдя на который можно вывести изображение на дисплей. Оказалось, что картинки выводятся весьма убого… Т.е. дисплей пригоден для вывода текстовой информации, но и не более того. +17 47 5,3k 27 марта 2021 в 18:24 , В раз показал один из способов распределение ресурсов между конечными точками, а именно регистров EPnR, памяти под дескрипторы буферов и под сами буферы. Предлагаю продолжить начатое и рассмотреть написанную библиотеку на примере создания простого HID-устройства, позволяющего управлять светодиодом. +19 68 3,6k 25 марта 2021 в 18:58 , , , , — это бесплатная платформа с открытым исходным кодом, основанная на .NET и предназначена для малых встраиваемых устройств, микроконтроллеров. С ее помощью можно разрабатывать различные устройства для Интернета вещей, носимые устройства, научные приборы, робототехнические устройства, можно создавать прототипы и даже использовать на промышленном оборудование. .NET nanoFramework является малой версией «большого» .NET Framework предназначенного для настольных систем. Разработка приложений ведется на языке C# в среде разработки Visual Studio. Сама платформа является исполнительной средой .NET кода, это позволяет абстрагироваться от аппаратного обеспечения и дает возможность переносить программный код с одного микроконтроллера на другой, который тоже поддерживает .NET nanoFramework. Программный код на C# для настольных систем, без изменений или с небольшой адаптацией (необходимо помнить про малый объем оперативной памяти) исполнится на микроконтроллере. Благодаря этому, разработчики на .NET с минимальными знаниями в области микроэлектроники смогут разрабатывать различные устройства на .NET nanoFramework. +40 91 6,9k 25 марта 2021 в 18:49 , USB на регистрах: interrupt endpoint на примере HID USB на регистрах: isochronous endpoint на примере Audio device В прошлый раз мы познакомились с общими принципами организации USB и собрали простое устройство, иллюстрирующее работу конечной точки типа Control. Пришло время изучать следующий тип — Bulk. Конечные точки такого типа предназначены для обмена большими объемами информации, причем чувствительной к надежности, но не скорости обмена. Классические примеры — запоминающие устройства и переходники вроде USB-COM. Но переходники требуют еще наличия конечной точки типа Interrupt, которую мы пока «не проходили», так что остановимся на эмуляции флешки. Точнее, двух флешек одновременно. +19 39 1,9k 25 марта 2021 в 16:18 , , Здравствуйте! Меня зовут Дмитрий Руднев. В этой публикации я поделюсь своим горьким опытом. В современной разработке широко используются микроконтроллеры STM32. Они обладают неплохим соотношением цена/производительность, вокруг них сложилась развитая «экосистема». Для прошивки этих микроконтроллеров и внутрисхемной отладки обычно используют интерфейс Serial Wire (SWD). В процессе отладки бывает всякое. Не беда, если STM32 после прошивки ведёт себя неадекватно. Обидно, если при этом к нему не удаётся подключиться. На этом месте не надо впадать в отчаяние, т.к. «убить насмерть» STM32 в процессе программирования непросто, и его работоспособность можно восстановить штатными средствами. +43 110 10,8k 25 марта 2021 в 15:09 , , , , В прошлом году, после выхода видео про дисплей GC9A01 на канале "Электроника в объективе", я решил, что обязательно должен что-то на нем собрать, да еще и с использованием графической библиотеки . Заказал 2 таких дисплея, один на плате второй отдельно только дисплей со шлейфом. +15 58 4,4k 25 марта 2021 в 14:56 , , , Перевод Последний год я , что включает в себя и написание прошивок под различные управляющие схемы. Первоначально, я писал их на Rust, но несмотря на годы опыта разработки на нем, приходилось повоевать. Со временем, я заставил мои клавиатуры работать, но это заняло неприличное количество времени и не приносило мне удовольствия. После неоднократных предложений от моего более подкованного в Rust-и-вычислительной технике друга , я переписал прошивку на , и вышло очень удачно. Я нашел это поразительным, учитывая, что я никогда не видел Zig раньше, и этот язык, еще даже не версии 1.0, созданный , и описывается, по сути, всего . +9 33 4,3k 22 марта 2021 в 10:19 , Сначала короткая предыстория появления этого поста. Относительно давно, помигав светодиодом, захотелось сделать что-то полезное. Так появился . Как назло, в это время перестал работать мой промышленный термостат. Меня выручила еще сырая поделка, наспех спрятанная в картонную коробочку. За время отопительного сезона напрягал лишь один недостаток прототипа – это необходимость таскать по квартире удлинитель 220В и кабель, который всегда путался под шваброй ногами . Поэтому решил сделать нечто похожее, но автономное, притом, с питанием от батареек, как в серийном образце. Понятно, что на потреблении устройства в целом сказывается слишком много факторов таких, как энергопотребление подключенных модулей, потребление самого контроллера, который управляет периферией, не последнюю роль тут играет оптимальное построение самого кода и алгоритм работы устройства. Приступая к задаче, для меня было очевидно одно – вряд ли программы промышленных автономных устройств составлены на платформе Arduino IDE. Где все спрятано в громоздкие тяжеловесные библиотеки, а простые коды (скетчи) занимают в редакторе несколько десятков строк, делая работу в этой среде комфортной и не требующей особых усилий. Уточню сразу – дальше речь о выборе языка программирования между Ардуино, Си или Ассемблером. "Язык Ардуино"- это сленг для краткости. Нет такого языка программирования. Если увидите тут и дальше "язык Ардуино", то — это "Arduino IDE — интегрированная среда разработки для Windows, MacOS и Linux, разработанная на Си и C ++"(). «… направу ехати — женату быти; налеву ехати — богату быти» +4 30 4k 22 марта 2021 в 08:26 , , , , Tutorial При разработке программного обеспечения любого класса и назначения, зачастую приходится заниматься поиском ошибок, которые привели к краху всего приложения. И если в случае обычного компьютера, анализ логов и core dump`ов как правило не вызывает сложностей, то для устройств на основе микроконтроллеров бывает сложно получить «посмертную» информацию, необходимую для изучения проблемы. Конечно, при подключенном программаторе и при постоянном выводе логов в какой нибудь отладочный порт можно достаточно комфортно вести отладку, но что делать, когда требуется искать причину сбоев устройства во время штатной эксплуатации устройства, когда инструментальные средства для отладки не подключены и нет внешней памяти для хранения логов? В продолжение серии статей про различные полезности для STM32 ( и ), предлагаю вашему вниманию решение для сохранения посмертной информации микроконтроллера при возникновении различных критических ситуаций с целью последующего анализа ошибки. Ну и в соответствии с собственным наблюдением , буду рад любым комментариям и предложениям, которые помогут протестировать или улучшить предлагаемое решение. +8 32 2,4k 21 марта 2021 в 16:14 , USB на регистрах: interrupt endpoint на примере HID USB на регистрах: isochronous endpoint на примере Audio device С программным USB на примере AVR мы уже познакомились, пришла пора взяться за более тяжелые камни — STM32. Подопытными у нас будут классический STM32F103C8T6 а также представитель малопотребляющей серии STM32L151RCT6. Как и раньше, пользоваться покупными отладочными платами и HAL'ом не будем, отдав предпочтение велосипеду. +31 122 4,9k ← сюда 1 Баннер исчез, но на прощание оставил коллекцию по работе с продуктами от Microsoft Вклад авторов Читают сейчас 17,5k 5,3k 11,2k 14,3k 2,5k 1124k Мегапост Пока никто не указал причину минусов Причины минусов Самое читаемое +49 17,5k 53 +111 71k 65 +52 14,3k 58 +20 14,2k 2 Подборка +218 104k 83 +111 71k 65 +45 66,6k 144 +62 36,6k 58 Мегапост +231 252k 446 +56 213k 112 +592 209k 505 +62 174k 111 Мегапост Минуточку внимания Ваш аккаунт Разделы Информация Услуги © 2006 – 2021 «» Настройка языка Интерфейс Русский English Язык публикаций Русский Английский Сохранить настройки